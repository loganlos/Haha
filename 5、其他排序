/* 选择排序 */
void SeectSort(int *a,int n)
{
	int i,j;
	int temp;
    int min = 0;
    for(i =1;i<n-1;i++)
    {
        min = i;
        for(j =i+1;j<=n;j++)
        {
            if(a[j] < a[min])
            {
                min = j;
            }
        }
        if(i!=min)
        {
            temp = a[i];
            a[i] = a[min];
            a[min] = temp;
        }  
    }
	return;
}




/* 冒泡排序 */
void BubbleSort(int *a,int n)
{
	int i,j,t,flag;
	for (i=1;i<=n-1;i++)
	{
		for(j=i+1;j<=n;j++)
		{
			if (a[i]>a[j])
			{
				t=a[i];
				a[i]=a[j];
				a[j]=t;
			}
		}
	}
	return;
}




/* 快速排序 */
int part(int *a,int p,int r)
{
	int x,i,j,temp;
	x=a[r];
	i=p-1;
	for(j=p;j<=r-1;j++)
	{
		if(a[j]<=x)
		{
			i++;
			temp=a[i];
			a[i]=a[j];
			a[j]=temp;
		}
	}
	temp=a[i+1];
	a[i+1]=a[r];
	a[r]=temp;
	return i+1;
}

void QuickSort(int *a,int p,int r) //p为开始位置，r为结束位置
{
	int q;
	if (p<r)
	{
		q=part(a,p,r);
		QuickSort(a,p,q-1);
		QuickSort(a,q+1,r);
	}
}
